#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <locale.h>
#define _USE_MATH_DEFINES
#include <math.h>
#include <stdlib.h>
#define SCREENW 60
#define SCREENH 40


double F1(double x)
{
    return (log(pow(x,2))-x+4);
}

double F2(double x)
{
    if (abs(x) > 1)
    {
        return (abs(x));
    }
    else if (abs(x) <= 1)
    {
        return (1 - pow(x, 2));
    }
    else
    {
        return (sin(x));
    }
}

/*void pT(double xn, double xk, double h, double (*function)(double), char sn, char sk)
{
    printf("x\t|\tF(x)\n");
    printf("------------------------\n");
    if (sn == '[' && sk == ']')
    {
        for (double x = xn; x <= xk; x += h)
        {
            printf("%.2lf\t|\t%.2lf\n", x, function(x));
        }
    }
    if (sn == '[' && sk == ')')
    {
        for (double x = xn; x < xk; x += h)
        {
            printf("%.2lf\t|\t%.2lf\n", x, function(x));
        }
    }
    if (sn == '(' && sk == ']')
    {
        for (double x = xn + h; x <= xk; x += h)
        {
            printf("%.2lf\t|\t%.2lf\n", x, function(x));
        }
    }
    if (sn == '(' && sk == ')')
    {
        for (double x = xn + h; x < xk; x += h)
        {
            printf("%.2lf\t|\t%.2lf\n", x, function(x));
        }
    }
    printf("------------------------\n");
}*/
typedef double (*TFunc)(double);
void plot(double x0, double x1, TFunc f)
{
    char screen[SCREENW][SCREENH];
    double x, y[SCREENW];
    double ymin = 0, ymax = 0;
    double hx, hy;
    int i, j;
    int xz, yz;

    hx = (x1 - x0) / (SCREENW - 1);

    for (i = 0, x = x0; i < SCREENW; ++i, x += hx)
    {
        y[i] = f(x);
        if (y[i] < ymin) ymin = y[i];
        if (y[i] > ymax) ymax = y[i];
    }

    hy = (ymax - ymin) / (SCREENH - 1);
    yz = (int)floor(ymax / hy + 0.5);
    xz = (int)floor((0. - x0) / hx + 0.5);

    for (j = 0; j < SCREENH; ++j)
    {
        for (i = 0; i < SCREENW; ++i)
        {
            if (j == yz && i == xz)
                screen[i][j] = '+';
            else if (j == yz)
                screen[i][j] = '-';
            else if (i == xz)
                screen[i][j] = '|';
            else
                screen[i][j] = ' ';
        }
    }

    for (i = 0; i < SCREENW; ++i)
    {
        j = (int)floor((ymax - y[i]) / hy + 0.5);
        screen[i][j] = '*';
    }

    for (j = 0; j < SCREENH; ++j)
    {
        for (i = 0; i < SCREENW; ++i) putchar(screen[i][j]);
        putchar('\n');
    }
}

int main()
{
    setlocale(LC_ALL, "RUS");
    int n;
    double x, xс, xk, h;
    char sk = '.', sn = '.';
    while (1)
    {
        printf("Выберите действие:\n");
        printf("1. Найти значение функции F1(x) при заданном значении аргумента x.\n");
        printf("2. Найти значение функции F2(x) при заданном значении аргумента x.\n");
        printf("3. Вычислить значения функции F1(x) на заданном интервале.\n");
        printf("4. Вычислить значения функции F2(x) на заданном интервале.\n");
        printf("5. Построить график функций F1(x) и F2(x).\n");
        printf("6. Завершить работу.\n");
        printf("> ");
        scanf("%d", &n);
        getchar();

        switch (n)
        {
        case 1:
            printf("Введите значение x: ");
            scanf("%lf", &x);
            printf("F1(%.2lf) = %.2lf\n", x, F1(x));
            break;
        case 2:
            printf("Введите значение x: ");
            scanf("%lf", &x);
            printf("F2(%.2lf) = %.2lf\n", x, F2(x));
            break;
        case 3:
            printf("Введите промежуток x: ");
            scanf("%c%lf ; %lf%c", &sn, &xс, &xk, &sk);
            printf("Введите шаг h: ");
            scanf("%lf", &h);
            printf("Таблица значений функции F1(x):\n");
            pT(xс, xk, h, F1, sn, sk);
            break;
        case 4:
            printf("Введите промежуток x: ");
            scanf("%c%lf ; %lf%c", &sn, &xс, &xk, &sk);
            printf("Введите шаг h: ");
            scanf("%lf", &h);
            printf("Таблица значений функции F2(x):\n");
            pT(xс, xk, h, F2, sn, sk);
            break;
        case 5:
            printf("Выберите функцию для построения графика (1 - F1, 2 - F2): ");
            scanf("%d", &n);
            printf("Введите промежуток x: ");
            scanf("%lf ; %lf", &xс, &xk);
            if (n == 1)
            {
                plot(xс, xk, F1);
            }
            else
            {
                plot(xс, xk, F2);
            }
            break;
        case 6:
            return 0;
        default:
            printf("Некорректный выбор. Попробуйте еще раз.\n");
            break;
        }
        printf("\n");
    }
}
